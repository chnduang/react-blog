(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{430:function(t,s,a){"use strict";a.r(s);var e=a(4),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("React核心团队成员"),s("a",{attrs:{href:"https://github.com/sebmarkbage/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sebastian Markbåge"),s("OutboundLink")],1),t._v("（"),s("code",[t._v("React Hooks")]),t._v("的发明者）曾说：我们在"),s("code",[t._v("React")]),t._v("中做的就是践行"),s("code",[t._v("代数效应")]),t._v("（Algebraic Effects）。")]),t._v(" "),s("p",[t._v("那么，"),s("code",[t._v("代数效应")]),t._v("是什么呢？他和"),s("code",[t._v("React")]),t._v("有什么关系呢。")]),t._v(" "),s("h2",{attrs:{id:"什么是代数效应"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是代数效应"}},[t._v("#")]),t._v(" 什么是代数效应")]),t._v(" "),s("p",[s("code",[t._v("代数效应")]),t._v("是"),s("code",[t._v("函数式编程")]),t._v("中的一个概念，用于将"),s("code",[t._v("副作用")]),t._v("从"),s("code",[t._v("函数")]),t._v("调用中分离。")]),t._v(" "),s("p",[t._v("接下来我们用"),s("code",[t._v("虚构的语法")]),t._v("来解释。")]),t._v(" "),s("p",[t._v("假设我们有一个函数"),s("code",[t._v("getTotalPicNum")]),t._v("，传入2个"),s("code",[t._v("用户名称")]),t._v("后，分别查找该用户在平台保存的图片数量，最后将图片数量相加后返回。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTotalPicNum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("user1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" user2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" picNum1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPicNum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" picNum2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPicNum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" picNum1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" picNum2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在"),s("code",[t._v("getTotalPicNum")]),t._v("中，我们不关注"),s("code",[t._v("getPicNum")]),t._v("的实现，只在乎“获取到两个数字后将他们相加的结果返回”这一过程。")]),t._v(" "),s("p",[t._v("接下来我们来实现"),s("code",[t._v("getPicNum")]),t._v("。")]),t._v(" "),s("p",[t._v('"用户在平台保存的图片数量"是保存在服务器中的。所以，为了获取该值，我们需要发起异步请求。')]),t._v(" "),s("p",[t._v("为了尽量保持"),s("code",[t._v("getTotalPicNum")]),t._v("的调用方式不变，我们首先想到了使用"),s("code",[t._v("async await")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTotalPicNum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("user1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" user2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" picNum1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPicNum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" picNum2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPicNum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" picNum1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" picNum2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("但是，"),s("code",[t._v("async await")]),t._v("是有"),s("code",[t._v("传染性")]),t._v("的 —— 当一个函数变为"),s("code",[t._v("async")]),t._v("后，这意味着调用他的函数也需要是"),s("code",[t._v("async")]),t._v("，这破坏了"),s("code",[t._v("getTotalPicNum")]),t._v("的同步特性。")]),t._v(" "),s("p",[t._v("有没有什么办法能保持"),s("code",[t._v("getTotalPicNum")]),t._v("保持现有调用方式不变的情况下实现异步请求呢？")]),t._v(" "),s("p",[t._v("没有。不过我们可以"),s("code",[t._v("虚构")]),t._v("一个。")]),t._v(" "),s("p",[t._v("我们虚构一个类似"),s("code",[t._v("try...catch")]),t._v("的语法 —— "),s("code",[t._v("try...handle")]),t._v("与两个操作符"),s("code",[t._v("perform")]),t._v("、"),s("code",[t._v("resume")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPicNum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" picNum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" perform name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" picNum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTotalPicNum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kaSong'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xiaoMing'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("who")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("who"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kaSong'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      resume "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("230")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xiaoMing'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      resume "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("122")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      resume "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("当执行到"),s("code",[t._v("getTotalPicNum")]),t._v("内部的"),s("code",[t._v("getPicNum")]),t._v("方法时，会执行"),s("code",[t._v("perform name")]),t._v("。")]),t._v(" "),s("p",[t._v("此时函数调用栈会从"),s("code",[t._v("getPicNum")]),t._v("方法内跳出，被最近一个"),s("code",[t._v("try...handle")]),t._v("捕获。类似"),s("code",[t._v("throw Error")]),t._v("后被最近一个"),s("code",[t._v("try...catch")]),t._v("捕获。")]),t._v(" "),s("p",[t._v("类似"),s("code",[t._v("throw Error")]),t._v("后"),s("code",[t._v("Error")]),t._v("会作为"),s("code",[t._v("catch")]),t._v("的参数，"),s("code",[t._v("perform name")]),t._v("后"),s("code",[t._v("name")]),t._v("会作为"),s("code",[t._v("handle")]),t._v("的参数。")]),t._v(" "),s("p",[t._v("与"),s("code",[t._v("try...catch")]),t._v("最大的不同在于：当"),s("code",[t._v("Error")]),t._v("被"),s("code",[t._v("catch")]),t._v("捕获后，之前的调用栈就销毁了。而"),s("code",[t._v("handle")]),t._v("执行"),s("code",[t._v("resume")]),t._v("后会回到之前"),s("code",[t._v("perform")]),t._v("的调用栈。")]),t._v(" "),s("p",[t._v("对于"),s("code",[t._v("case 'kaSong'")]),t._v("，执行完"),s("code",[t._v("resume with 230;")]),t._v("后调用栈会回到"),s("code",[t._v("getPicNum")]),t._v("，此时"),s("code",[t._v("picNum === 230")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("再次申明，"),s("code",[t._v("try...handle")]),t._v("的语法是虚构的，只是为了演示"),s("code",[t._v("代数效应")]),t._v("的思想。")])]),t._v(" "),s("p",[t._v("总结一下："),s("code",[t._v("代数效应")]),t._v("能够将"),s("code",[t._v("副作用")]),t._v("（例子中为"),s("code",[t._v("请求图片数量")]),t._v("）从函数逻辑中分离，使函数关注点保持纯粹。")]),t._v(" "),s("p",[t._v("并且，从例子中可以看出，"),s("code",[t._v("perform resume")]),t._v("不需要区分同步异步。")]),t._v(" "),s("h2",{attrs:{id:"代数效应在react中的应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代数效应在react中的应用"}},[t._v("#")]),t._v(" 代数效应在React中的应用")]),t._v(" "),s("p",[t._v("那么"),s("code",[t._v("代数效应")]),t._v("与"),s("code",[t._v("React")]),t._v("有什么关系呢？最明显的例子就是"),s("code",[t._v("Hooks")]),t._v("。")]),t._v(" "),s("p",[t._v("对于类似"),s("code",[t._v("useState")]),t._v("、"),s("code",[t._v("useReducer")]),t._v("、"),s("code",[t._v("useRef")]),t._v("这样的"),s("code",[t._v("Hook")]),t._v("，我们不需要关注"),s("code",[t._v("FunctionComponent")]),t._v("的"),s("code",[t._v("state")]),t._v("在"),s("code",[t._v("Hook")]),t._v("中是如何保存的，"),s("code",[t._v("React")]),t._v("会为我们处理。")]),t._v(" "),s("p",[t._v("我们只需要假设"),s("code",[t._v("useState")]),t._v("返回的是我们想要的"),s("code",[t._v("state")]),t._v("，并编写业务逻辑就行。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("App")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" updateNum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button onClick"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateNum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果这个例子还不够明显，可以看看官方的"),s("a",{attrs:{href:"https://codesandbox.io/s/frosty-hermann-bztrp?file=/src/index.js:152-160",target:"_blank",rel:"noopener noreferrer"}},[t._v("Suspense Demo"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("Demo")]),t._v("中"),s("code",[t._v("ProfileDetails")]),t._v("用于展示"),s("code",[t._v("用户名称")]),t._v("。而"),s("code",[t._v("用户名称")]),t._v("是"),s("code",[t._v("异步请求")]),t._v("的。")]),t._v(" "),s("p",[t._v("但是"),s("code",[t._v("Demo")]),t._v("中完全是"),s("code",[t._v("同步")]),t._v("的写法。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ProfileDetails")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" resource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"代数效应与generator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代数效应与generator"}},[t._v("#")]),t._v(" 代数效应与Generator")]),t._v(" "),s("p",[t._v("从"),s("code",[t._v("React15")]),t._v("到"),s("code",[t._v("React16")]),t._v("，协调器（"),s("code",[t._v("Reconciler")]),t._v("）重构的一大目的是：将老的"),s("code",[t._v("同步更新")]),t._v("的架构变为"),s("code",[t._v("异步可中断更新")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("异步可中断更新")]),t._v("可以理解为："),s("code",[t._v("更新")]),t._v("在执行过程中可能会被打断（浏览器时间分片用尽或有更高优任务插队），当可以继续执行时恢复之前执行的中间状态。")]),t._v(" "),s("p",[t._v("这就是"),s("code",[t._v("代数效应")]),t._v("中"),s("code",[t._v("try...handle")]),t._v("的作用。")]),t._v(" "),s("p",[t._v("其实，浏览器原生就支持类似的实现，这就是"),s("code",[t._v("Generator")]),t._v("。")]),t._v(" "),s("p",[t._v("但是"),s("code",[t._v("Generator")]),t._v("的一些缺陷使"),s("code",[t._v("React")]),t._v("团队放弃了他：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("类似"),s("code",[t._v("async")]),t._v("，"),s("code",[t._v("Generator")]),t._v("也是"),s("code",[t._v("传染性")]),t._v("的，使用了"),s("code",[t._v("Generator")]),t._v("则上下文的其他函数也需要作出改变。这样心智负担比较重。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Generator")]),t._v("执行的"),s("code",[t._v("中间状态")]),t._v("是上下文关联的。")])])]),t._v(" "),s("p",[t._v("考虑如下例子：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doWork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("C")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doExpensiveWorkA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doExpensiveWorkB")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doExpensiveWorkC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("C")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("每当浏览器有空闲时间都会依次执行其中一个"),s("code",[t._v("doExpensiveWork")]),t._v("，当时间用尽则会中断，当再次恢复时会从中断位置继续执行。")]),t._v(" "),s("p",[t._v("只考虑“单一优先级任务的中断与继续”情况下"),s("code",[t._v("Generator")]),t._v("可以很好的实现"),s("code",[t._v("异步可中断更新")]),t._v("。")]),t._v(" "),s("p",[t._v("但是当我们考虑“高优先级任务插队”的情况，如果此时已经完成"),s("code",[t._v("doExpensiveWorkA")]),t._v("与"),s("code",[t._v("doExpensiveWorkB")]),t._v("计算出"),s("code",[t._v("x")]),t._v("与"),s("code",[t._v("y")]),t._v("。")]),t._v(" "),s("p",[t._v("此时"),s("code",[t._v("B")]),t._v("组件接收到一个"),s("code",[t._v("高优更新")]),t._v("，由于"),s("code",[t._v("Generator")]),t._v("执行的"),s("code",[t._v("中间状态")]),t._v("是上下文关联的，所以计算"),s("code",[t._v("y")]),t._v("时无法复用之前已经计算出的"),s("code",[t._v("x")]),t._v("，需要重新计算。")]),t._v(" "),s("p",[t._v("如果通过"),s("code",[t._v("全局变量")]),t._v("保存之前执行的"),s("code",[t._v("中间状态")]),t._v("，又会引入新的复杂度。")]),t._v(" "),s("blockquote",[s("p",[t._v("更详细的解释可以参考"),s("a",{attrs:{href:"https://github.com/facebook/react/issues/7942#issuecomment-254987818",target:"_blank",rel:"noopener noreferrer"}},[t._v("这个issue"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("基于这些原因，"),s("code",[t._v("React")]),t._v("没有采用"),s("code",[t._v("Generator")]),t._v("实现"),s("code",[t._v("协调器")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"代数效应与fiber"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代数效应与fiber"}},[t._v("#")]),t._v(" 代数效应与Fiber")]),t._v(" "),s("p",[s("code",[t._v("Fiber")]),t._v("并不是计算机术语中的新名词，他的中文翻译叫做"),s("code",[t._v("纤程")]),t._v("，与进程（Process）、线程（Thread）、协程（Coroutine）同为程序执行过程。")]),t._v(" "),s("p",[t._v("在很多文章中将"),s("code",[t._v("纤程")]),t._v("理解为"),s("code",[t._v("协程")]),t._v("的一种实现。在"),s("code",[t._v("JS")]),t._v("中，"),s("code",[t._v("协程")]),t._v("的实现便是"),s("code",[t._v("Generator")]),t._v("。")]),t._v(" "),s("p",[t._v("所以，我们可以将"),s("code",[t._v("纤程")]),t._v("(Fiber)、"),s("code",[t._v("协程")]),t._v("(Generator)理解为"),s("code",[t._v("代数效应")]),t._v("思想在"),s("code",[t._v("JS")]),t._v("中的体现。")]),t._v(" "),s("p",[s("code",[t._v("React Fiber")]),t._v("可以理解为：")]),t._v(" "),s("p",[s("code",[t._v("React")]),t._v("内部实现的一套状态更新机制。支持任务不同"),s("code",[t._v("优先级")]),t._v("，可中断与恢复，并且恢复后可以复用之前的"),s("code",[t._v("中间状态")]),t._v("。")]),t._v(" "),s("p",[t._v("其中每个任务更新单元为"),s("code",[t._v("React Element")]),t._v("对应的"),s("code",[t._v("Fiber节点")]),t._v("。")]),t._v(" "),s("p",[t._v("下一节，我们具体讲解"),s("code",[t._v("Fiber架构")]),t._v("的实现。")])])}),[],!1,null,null,null);s.default=n.exports}}]);